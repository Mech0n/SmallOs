[_start] -> [main.rs: print]
[_start] -> [main.rs: os::init]
[_start] -> [main.rs: boot_info]
[_start] -> [main.rs: create_example_mapping]
[_start] -> [main.rs: init_heap]
[main.rs: print] -> [vga_buffer.rs: _print] -> [vga_buffer.rs: WRITER.write_] -> [mem: vga_buffer]
[main.rs: os::init] -> [gdt.rs: init]
[main.rs: os::init] -> [interrupts.rs: init_idt]
[main.rs: os::init] -> [interrupts.rs: PICS.initialize]
[gdt.rs: init] -> [gdt.rs: set_reg(CS)]
[gdt.rs: init] -> [gdt.rs: load_tss]
[gdt.rs: load_tss] -> [gdt.rs: set(interrupt_stack_table)]
[interrupts.rs: init_idt] -> [interrupts.rs: breakpoint_handler]
[interrupts.rs: init_idt] -> [interrupts.rs: page_fault_handler]
[interrupts.rs: init_idt] -> [interrupts.rs: double_fault_handler] -> [interrupts.rs: set_stack_index(gdt)]
[interrupts.rs: init_idt] -> [interrupts.rs: timer_interrupt_handler] -> [interrupts.rs: PICS.notify_end_of_interrupt]
[interrupts.rs: init_idt] -> [interrupts.rs: keyboard_interrupt_handler] -> [interrupts.rs: PICS.notify_end_of_interrupt]
[main.rs: boot_info] -> [main.rs: mapper] -> [memory.rs: init]
[memory.rs: init] -> [memory.rs: active_level_4_table] -> [memory.rs: Cr3] -> [memory.rs: PageTable.new(level_4)]
[memory.rs: init] -> [memory.rs: OffsetPageTable(mapper)]
[main.rs: create_example_mapping] -> [memory.rs: map_to] -> [memory.rs: BootInfoFrameAllocator.init]
[memory.rs: BootInfoFrameAllocator.init] -> [memory.rs: BootInfoFrameAllocator.usable_frames] -> [memory.rs: BootInfoFrameAllocator.allocate_frame]
[main.rs: init_heap] -> [allocator.rs: map_to] -> [allocator.rs: ALLOCATOR.init]